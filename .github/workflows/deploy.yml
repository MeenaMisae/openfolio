name: Build and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install dependencies
        run: npm ci

      - name: Build project
        run: npm run build

      - name: Get GitHub Actions runner IP
        run: |
          # Obtendo o IP público do GitHub Actions runner
          GITHUB_RUNNER_IP=$(curl -s ifconfig.me)
          echo "GitHub Actions runner IP is $GITHUB_RUNNER_IP"
          echo "GITHUB_RUNNER_IP=$GITHUB_RUNNER_IP" >> $GITHUB_ENV

      - name: Adjust Firewall settings
        run: |
          # Permitir apenas conexões do runner do GitHub Actions
          echo "Configurando firewall para permitir o IP do GitHub Actions"
          sudo ufw allow from ${{ env.GITHUB_RUNNER_IP }} to any port 22
          sudo ufw reload

      - name: Set up SSH for deploy
        run: |
          mkdir -p ~/.ssh
          chmod 700 ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/deploy_key
          chmod 600 ~/.ssh/deploy_key
          ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
          echo "Testando conexao ssh"
          ssh -v -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} 'echo "Test connection"'

      - name: Deploy to server
        run: |
          echo "Garantindo que a pasta /var/www/portfolio/dist existe no servidor"
          ssh -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "mkdir -p /var/www/portfolio/dist"

          echo "Apagando conteúdo antigo da pasta dist no servidor"
          ssh -i ~/.ssh/deploy_key ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} "rm -rf /var/www/portfolio/dist/*"

          echo "Iniciando deploy"
          rsync -e "ssh -i ~/.ssh/deploy_key" -avz dist/ ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }}:/var/www/portfolio/dist/

      - name: Revert Firewall settings
        run: |
          # Remover as permissões temporárias de firewall
          echo "Removendo regras de firewall após o deploy"
          sudo ufw delete allow from ${{ env.GITHUB_RUNNER_IP }} to any port 22
          sudo ufw reload
